# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Roames Standalone Data Grids System Test Package & Publish


on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [prereleased, released]
  workflow_dispatch:
    inputs:
      tag:
        description: tag to give the built image
        required: true

jobs:
  Step-3-1-Maven-Package:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests
    
    - uses: actions/upload-artifact@v2
      with:
          name: jarfile
          path: ${{ github.workspace }}/target/RoamesDataGridsTestAutomation.jar
          
    - uses: actions/upload-artifact@v2
      with:
          name: libs
          path: ${{ github.workspace }}/target/libs/  
      

  Step-3-2-Publish-Docker-Image:

    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: Step-3-1-Maven-Package
    steps:
    - uses: actions/checkout@v2

    - name: Serialize workflow run
      uses: softprops/turnstyle@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Tag as as manually triggered
      if: ${{ github.event_name == 'workflow_dispatch'}}
      run: |
        echo "image_tag=${{ github.event.inputs.tag }}" >> $GITHUB_ENV

    - name: Tag as release
      if: ${{ github.event_name == 'release' && (github.event.action == 'released' || github.event.action == 'prereleased') }}
      run: |
        export TAG=$(git describe --tags --exact-match)
        echo "image_tag=${TAG}" >> $GITHUB_ENV

    - name: Tag to latest
      if: ${{ github.event_name != 'workflow_dispatch' &&  github.event_name != 'release'}}
      run: |
        echo "image_tag=latest" >> $GITHUB_ENV
    - name: Download artifacts
      run: |
          mkdir -p ${{ github.workspace }}/target
          mkdir -p ${{ github.workspace }}/target/libs
          
    - uses: actions/download-artifact@v2
      with:
        name: jarfile
        path: ${{ github.workspace }}/target
    - uses: actions/download-artifact@v2
      with:
        name: libs
        path: ${{ github.workspace }}/target/libs
    
    - name: Build the Docker image
      run: |
        docker login https://docker.pkg.github.com -u "${{ github.actor }}" -p "${GITHUB_TOKEN}"
        docker build . --file Dockerfile --tag docker.pkg.github.com/raychenldl/roames.analytics.systemtest/roamesanalyticssystemtest:${image_tag}
        docker push docker.pkg.github.com/raychenldl/roames.analytics.systemtest/roamesanalyticssystemtest:${image_tag}
        docker rmi docker.pkg.github.com/raychenldl/roames.analytics.systemtest/roamesanalyticssystemtest:${image_tag}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Delete workflow artifacts
      uses: geekyeggo/delete-artifact@v1
      with:
        name: |
          jarfile
          libs
  
    - name: System Test
      id: systemtest
      run: |
        docker login https://docker.pkg.github.com -u ${{ secrets.USER_ID }} -p ${{ secrets.USER_TOKEN }}
        docker volume create --name DataVolDownload
        docker network create nut
        docker run -d --network nut --name selenium-hub selenium/hub
        docker run -d --network nut -e HUB_HOST=selenium-hub --name selenium-chrome1 --shm-size=1g -v DataVolDownload:/home/seluser selenium/node-chrome
        docker run -d --network nut -e HUB_HOST=selenium-hub --name selenium-firefox1 --shm-size=1g -v DataVolDownload:/home/seluser selenium/node-firefox-debug
        docker run --network nut --name test-runner -e TESTENV='PROD' -e MODULE='testng' -e SELENIUM_GRID='local' -e HUB_HOST=selenium-hub -e ParallelThreads='1' -e passphrase=${{secrets.AUTOMATED_TEST_PASS_PHRASE}} -v DataVolDownload:/root --volume="/home":/target docker.pkg.github.com/raychenldl/roames.analytics.systemtest/roamesanalyticssystemtest:${image_tag}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Archive system test report
      # Archive test report either system test passes or fails
      if: success() || (failure() && steps.systemtest.outcome == 'failure')
      uses: actions/upload-artifact@v1
      with:
        name: system-test-report
        path: /home/surefire-reports/html

    - name: New release - Zip system test report
      if: ${{ github.event_name == 'release' && (github.event.action == 'released' || github.event.action == 'prereleased')}}
      run: |
        zip -r system-test-report.zip /home/surefire-reports/html

    - name: New release - Add system test report to release asset
      if: ${{ github.event_name == 'release' && (github.event.action == 'released' || github.event.action == 'prereleased')}}
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: ${{ github.event.release.upload_url }}
         asset_path: ${{ github.workspace }}/system-test-report.zip
         asset_name: system-test-report.zip
         asset_content_type: application/zip 
